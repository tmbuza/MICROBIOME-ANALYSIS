from snakemake.utils import min_version

min_version("6.10.0")

# Configuration file containing all user-specified settings
configfile: "config/config.yaml"

# mothurSamples = list(set(glob_wildcards(os.path.join('data/mothur/reads/', '{sample}_{readNum, R[12]}_001.fastq.gz')).sample))

sraSamples = list(set(glob_wildcards(os.path.join('data/reads/', '{sample}_{sraNum, [12]}.fastq.gz')).sample))

import os
import csv
import pandas as pd

# RUNINFO="data/metadata"
# METADATA=pd.read_csv('OUTDIR/SraRunTable.csv').loc[0:3]
# ACCESSIONS=METADATA['Run'].tolist() # Specify the column containing the accession, in this demo is Run
OUTDIR="data/metadata" 

if not os.path.exists(OUTDIR):
   os.makedirs(OUTDIR)


# Master rule for controlling workflow.
rule all:
    input:
        expand("data/metadata/{bioproject}_metadata.csv", bioproject=config["bioproject"]),
        expand("data/metadata/{bioproject}_tidy_metadata.csv", bioproject=config["bioproject"]),
        expand("results/{bioproject}_sra_accessions.txt", bioproject=config["bioproject"]),
        expand("results/{bioproject}_read_size_asc.csv", bioproject=config["bioproject"]),
        expand("results/{bioproject}_read_size_desc.csv", bioproject=config["bioproject"]),
        expand("images/{bioproject}_gps.png", bioproject=["PRJNA477349", "PRJNA802976", "PRJEB21612"]),
        "index.html",

# Fetch SRRunInfo directly (incode)
rule get_sra_metadata:
    output:
        # runinfo=expand("data/me{bioproject}.csv", bioproject=config["bioproject"]),
        pysradb=expand("data/metadata/{bioproject}_metadata.csv", bioproject=config["bioproject"]),
        # pysradb_=expand("data/metadata/{bioproject}_metadata_.csv", bioproject=config["bioproject"]),
    shell:
         "bash workflow/scripts/get_sra_metadata.sh"


 # SRA RunSelectir metadata (must be downloaded first)
rule process_metadata:  
    input:
        metadata=expand("data/metadata/{bioproject}_metadata.csv", bioproject=config["bioproject"]),
    output:
        tidy=expand("data/metadata/{bioproject}_tidy_metadata.csv", bioproject=config["bioproject"]),
    script:
        "scripts/process_sraruntable.R"       
        
# Get SRA accessions, the first column of metadata
rule extract_accessions:
    input:
        runmetadata=expand(rules.process_metadata.output, bioproject=config["bioproject"]),
    output:
        runacc=expand("results/{bioproject}_sra_accessions.txt", bioproject=config["bioproject"]),
    script:
        "scripts/get_run_accessions.py"

# Get variable barplot
rule get_variable_freq:
    input:
        runmetadata=expand(rules.process_metadata.output, bioproject=config["bioproject"]),
    output:
        png=expand("images/{bioproject}_variable_freq.png", bioproject=["PRJNA477349", "PRJNA685168"]),
        svg=expand("images/{bioproject}_variable_freq.svg", bioproject=["PRJNA477349", "PRJNA685168"]),
    script:
        "scripts/plot_var_freq.R"


# Get read size
rule explore_read_size:
    input:
        expand("data/metadata/{bioproject}_tidy_metadata.csv", bioproject=config["bioproject"]),
    output:
        asc=expand("results/{bioproject}_read_size_asc.csv", bioproject=config["bioproject"]),
        desc=expand("results/{bioproject}_read_size_desc.csv", bioproject=config["bioproject"]),
    script:
        "scripts/explore_read_size.R"



# Get sample location 
rule plot_sampling_points:
    input:
        expand("data/metadata/{bioproject}_tidy_metadata.csv", bioproject=config["bioproject"]),
    output:
        gps=expand("images/{bioproject}_gps.png", bioproject=["PRJNA477349", "PRJNA802976", "PRJEB21612"]),
    script:
        "scripts/get_sample_gps.R"


# Get project tree
rule project_tree:
    output:
        tree="results/project_tree.txt"
    shell:
        """
        bash workflow/scripts/tree.sh
        """

# Get smk static report
rule static_snakemake_report:
    output:
        smkhtml="report.html",
        html2png="images/smkreport/screenshot.png"
    shell:
        """
        bash workflow/scripts/smk_html_report.sh
        """

rule deploy_to_github_pages:
    input:
        script="workflow/scripts/render.R",
        rmd="index.Rmd",
        tree="results/project_tree.txt",
        runselector="images/sra_run_selector.png",
        html2png=rules.static_snakemake_report.output.html2png,
        png=expand("images/{bioproject}_variable_freq.png",  bioproject=["PRJNA477349", "PRJNA685168"]),
        svg=expand("images/{bioproject}_variable_freq.svg",  bioproject=["PRJNA477349", "PRJNA685168"]),
        gps=expand("images/{bioproject}_gps.png", bioproject=["PRJNA477349", "PRJNA802976", "PRJEB21612"]),
        acc=expand("results/{bioproject}_sra_accessions.txt", bioproject=config["bioproject"]),
        asc=expand("results/{bioproject}_read_size_asc.csv", bioproject=config["bioproject"]),
        desc=expand("results/{bioproject}_read_size_desc.csv", bioproject=config["bioproject"]),
    output:
        doc="index.html",
    shell:
        """
        R -e "library(rmarkdown); render('{input.rmd}')"
        """

        # Explore SRA metadata



