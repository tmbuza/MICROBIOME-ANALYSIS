from snakemake.utils import min_version

min_version("6.10.0")

# Configuration file containing all user-specified settings
configfile: "config/config.yaml"

# mothurSamples = list(set(glob_wildcards(os.path.join('data/mothur/reads/', '{sample}_{readNum, R[12]}_001.fastq.gz')).sample))

sraSamples = list(set(glob_wildcards(os.path.join('data/reads/', '{sample}_{sraNum, [12]}.fastq.gz')).sample))

import os
import csv
import pandas as pd

# RUNINFO="data/metadata"
# METADATA=pd.read_csv('OUTDIR/SraRunTable.csv').loc[0:3]
# ACCESSIONS=METADATA['Run'].tolist() # Specify the column containing the accession, in this demo is Run
OUTDIR="data/metadata" 

if not os.path.exists(OUTDIR):
   os.makedirs(OUTDIR)


# Master rule for controlling workflow.
rule all:
    input:
        expand("data/metadata/{bioproject}_pysradb_metadata.csv", bioproject=config["bioproject"]),
        expand("data/metadata/{bioproject}_tidy_metadata.csv", bioproject=config["bioproject"]),
        expand("results/{bioproject}_srarun_accessions.txt", bioproject=config["bioproject"]),
        expand("images/{bioproject}_variable_freq.svg", bioproject=["PRJNA477349"]),
        expand("results/{bioproject}_read_size_asc.csv", bioproject=config["bioproject"]),
        expand("results/{bioproject}_read_size_desc.csv", bioproject=config["bioproject"]),
        "results/sample_location.csv",
        "images/sample_gps.png",
        "index.html",


rule pysradb_download_metadata:  
    output:
        pysradbmeta=expand("data/metadata/{bioproject}_pysradb_metadata.csv", bioproject=config["bioproject"]),
    shell:
        "bash scripts/pysradb_sra_metadata.sh"       


rule process_srarun_metadata:  
    input:
        metadata=expand("data/metadata/{bioproject}_SraRunTable.csv", bioproject=config["bioproject"]),
    output:
        tidy=expand("data/metadata/{bioproject}_tidy_metadata.csv", bioproject=config["bioproject"]),
    script:
        "scripts/process_sraruntable.R"       


rule extract_srarun_accessions:
    input:
        runmetadata=expand("data/metadata/{bioproject}_tidy_metadata.csv", bioproject=config["bioproject"]),
    output:
        runacc=expand("results/{bioproject}_srarun_accessions.txt", bioproject=config["bioproject"]),
    script:
        "scripts/get_run_accessions.py"

# Get variable barplot
rule plot_variable_freq:
    input:
        runmetadata=expand("data/metadata/{bioproject}_SraRunTable.csv", bioproject=["PRJNA477349"]),
    output:
        png=expand("images/{bioproject}_variable_freq.png", bioproject=["PRJNA477349"]),
        svg=expand("images/{bioproject}_variable_freq.svg", bioproject=["PRJNA477349"]),
    script:
        "scripts/plot_var_freq.R"


# Get read size
rule explore_read_size:
    input:
        expand("data/metadata/{bioproject}_tidy_metadata.csv", bioproject=config["bioproject"]),
    output:
        asc=expand("results/{bioproject}_read_size_asc.csv", bioproject=config["bioproject"]),
        desc=expand("results/{bioproject}_read_size_desc.csv", bioproject=config["bioproject"]),
    script:
        "scripts/explore_read_size.R"


# Get sample location data
rule get_location_data:
    input:
        metadata=expand("data/metadata/{bioproject}_SraRunTable.csv", bioproject=config["bioproject"]),
    output:
        samloc="results/sample_location.csv",
    script:
        "scripts/get_sample_location_data.R"


# Get sample location 
rule plot_sampling_points:
    input:
        samloc="results/sample_location.csv",
    output:
        gps="images/sample_gps.png"
    script:
        "scripts/mark_sampling_points.R"

# Get dot rule graphs
rule dot_rules_graph:
	output:
		"dags/rulegraph.svg",
		"dags/rulegraph.png",
	shell:
		"bash workflow/scripts/rules_dag.sh"


# Get project tree
rule project_tree:
    output:
        tree="results/project_tree.txt"
    shell:
        """
        bash workflow/scripts/tree.sh
        """

# Get smk static report
rule static_snakemake_report:
    output:
        smkhtml="report.html",
        html2png="images/smkreport/screenshot.png"
    shell:
        """
        bash workflow/scripts/smk_html_report.sh
        """

rule deploy_to_github_pages:
    input:
        script="workflow/scripts/render.R",
        rmd="index.Rmd",
        tree="results/project_tree.txt",
        runselector="images/sra_run_selector.png",
        html2png=rules.static_snakemake_report.output.html2png,
        acc=expand("results/{bioproject}_srarun_accessions.txt", bioproject=config["bioproject"]),
        svgfreq=expand("images/{bioproject}_variable_freq.svg", bioproject=["PRJNA477349"]),
        asc=expand("results/{bioproject}_read_size_asc.csv", bioproject=config["bioproject"]),
        desc=expand("results/{bioproject}_read_size_desc.csv", bioproject=config["bioproject"]),
        samgps="images/sample_gps.png",
        rules="dags/rulegraph.png",
    output:
        doc="index.html",
    shell:
        """
        R -e "library(rmarkdown); render('{input.rmd}')"
        """

        # Explore SRA metadata



