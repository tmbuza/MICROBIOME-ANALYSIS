from snakemake.utils import min_version

min_version("6.10.0")

# Configuration file containing all user-specified settings
configfile: "config/config.yaml"

# mothurSamples = list(set(glob_wildcards(os.path.join('data/mothur/reads/', '{sample}_{readNum, R[12]}_001.fastq.gz')).sample))

sraSamples = list(set(glob_wildcards(os.path.join('data/reads/', '{sample}_{sraNum, [12]}.fastq.gz')).sample))

import os
import csv
import pandas as pd

# RUNINFO="data/metadata"
# METADATA=pd.read_csv('OUTDIR/SraRunTable.csv').loc[0:3]
# ACCESSIONS=METADATA['Run'].tolist() # Specify the column containing the accession, in this demo is Run
OUTDIR="data/metadata" 

if not os.path.exists(OUTDIR):
   os.makedirs(OUTDIR)


# Master rule for controlling workflow.
rule all:
    input:
        "config/samples.tsv",
        "config/units.tsv",
        "index.html",

rule download_sra_metadata:  
    output:
        entresefetch=expand("data/metadata/{bioproject}_runinfo.csv", bioproject=config["bioproject"]),
        pysradb=expand("data/metadata/{bioproject}_pysradb.csv", bioproject=config["bioproject"]),
    shell:
        "bash workflow/scripts/download_sra_metadata.sh" 


rule process_sra_metadata:  
    input:
        esearch=expand("data/metadata/{bioproject}_runinfo.csv", bioproject=config["bioproject"]),
        pysradb=expand("data/metadata/{bioproject}_pysradb.csv", bioproject=config["bioproject"]),
        metadata=expand("data/metadata/{bioproject}_SraRunTable.csv", bioproject=config["bioproject"]),
    output:
        tidymeta=expand("data/metadata/{bioproject}_tidy_metadata.csv", bioproject=config["bioproject"]),
    script:
        "scripts/process_sraruntable.R" 

# Merged project metadata
rule merge_proj_metadata:
    input:
        meta=expand(rules.process_sra_metadata.output, bioproject=config["bioproject"]),
        tidymeta=expand("data/metadata/{bioproject}_tidy_metadata.csv", bioproject=config["bioproject"]),
    output:
        mergedmeta="data/metadata/metadata.csv",
    script:
        "scripts/merge_proj_metadata.R"


rule screate_mapping_files:  
    input:
        metadata="data/metadata/metadata.csv"
    output:
        samples="config/samples.tsv",
        units="config/units.tsv",
    script:
        "scripts/samples_units_metadata.R"     
 

# Get read size
rule explore_read_size:
    input:
        "data/metadata/metadata.csv",
    output:
        asc="results/read_size_asc.csv",
        desc="results/read_size_desc.csv"
    script:
        "scripts/explore_read_size.R"


# Get variable barplot
rule plot_read_size:
    input:
        metadata="data/metadata/metadata.csv",
    output:
        svg="images/read_size.svg",
        png="images/read_size.png",
    script:
        "scripts/plot_var_freq.R"



# Get sample location 
rule plot_sampling_points:
    input:
        metadata="data/metadata/metadata.csv",
    output:
        gps="images/sample_gps.png"
    script:
        "scripts/plot_sampling_points.R"


# Get dot rule graphs
rule dot_rules_graph:
	output:
		"dags/rulegraph.svg",
		"dags/rulegraph.png",
	shell:
		"bash workflow/scripts/rules_dag.sh"


# Get project tree
rule project_tree:
    output:
        tree="results/project_tree.txt"
    shell:
        """
        bash workflow/scripts/tree.sh
        """

# Get smk static report
rule static_snakemake_report:
    output:
        smkhtml="report.html",
        html2png="images/smkreport/screenshot.png"
    shell:
        """
        bash workflow/scripts/smk_html_report.sh
        """

rule deploy_to_github_pages:
    input:
        script="workflow/scripts/render.R",
        rmd="index.Rmd",
        tree="results/project_tree.txt",
        runselector="images/sra_run_selector.png",
        html2png=rules.static_snakemake_report.output.html2png,
        readsize="images/read_size.svg",
        samgps="images/sample_gps.png",
        rules="dags/rulegraph.svg",
        asc="results/read_size_asc.csv",
        desc="results/read_size_desc.csv",
    output:
        doc="index.html",
    shell:
        """
        R -e "library(rmarkdown); render('{input.rmd}')"
        """

    
